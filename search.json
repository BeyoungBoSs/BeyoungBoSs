[{"title":"Python","url":"/2019/07/04/Python - 副本/","content":"\n# **python学习随手记**\n> 都是一些基础，用来写博客了练练手\n# 基础\n## 变量的命名和使用\n1. 变量名只含   字母、数字、下划线   不能有空格\n2. 慎用小写字母‘i’和大写字母‘O'\n## 字符串\n1. 引号成对出现\n\n2. `print('hello \"world\"')`\n\n3. `print('''hello \"world\"''')`\n\n4. \n```\ndef good()\n\t\"\"\"  文档字符串  \"\"\"   #用三引号括起，生成有关函数中程序文档，调试开发有用\n\tprint(hello)\n```\n\n5. \n### 一些方法\n1. `.title()`：首字母大写\n2. `.upper()`全大写\n3. `.lower()`全小写\n4. `.rstrip()`删除字符串末尾的空白（删除后保存在临时变量里，想改变原变量就要重新赋值回去）\n5. `.lstrip()`删除字符串首段的空白\n6. `.strip()`删除字符串两边的空白\n\n## Python版本print\n\n1. python2.x print中无需将要打印的内容放括号里\n```\na=1\nb=2\nprint \"the sum=\",a+b,#末尾添加逗号不换行\n```\n2. python3.x print是一个函数\n```\na=1\nb=2\nprint(\"the sum=\",a+b,end=\"\")#end参数默认为\\n\n>3\nprint(\"the sum=\",a+b,end=\"asd\")\n>3asd\n```\n\n### Python版本整除\n1. python2.x \n```a=1\nprint 3/2\n>1\nprint 3/2.0\n>1.5\n```\n2. python3.x \n```\nprint(3/2)\n>1.5\nprint(3//2)\n>1\nprint(3//2.0)\n>1.0\n```\n\n## 负数向下取整\npython除法采取的是向下取整，即向负无穷方向取最接近精确值的整数。\n\n1. 故当整除运算有负数(python3)\n\n```\n\tprint(-3//2)\n\t>-2\n\tprint(int(-3//2))\n\t>-2\n\t> print(int(-3/2))\n\t>-1\n```\n\n\n2. 取余运算\n\n```\n    print(-5%4)\n    >3\n    # -5 // 4 = -2 , -5 - (-2) * 4 = 3\n    # -5 - 3 % 4 = 0\n```\n\n   \n\n## python之禅\n\n> python的原则\n\n![1562474065717](https://github.com/BeyoungBoSs/images/raw/master/img/1562474065717.png)\n\n# 列表\n\n## 列表的访问\n\n列表:  [  ]\n\n```\nt=[ ('a',1) , ('b',2,3) , 4 ]\nprint(t[0])    #索引从0开始，末尾为-1\n>('a',1)\nprint(t[-1])\n>4\nprint(t[1][2])\n>3\n```\n\n### 一些方法\n\n1. `.append('123')`将元素 '123' 放入列表末尾\n2. `.insert(0.'123')`将元素 '123' 放入索引 0 处,其他元素右移\n3. `del t[0]`永久删除索引为 0 处的元素\n4. `pop(0)`临时删除（列表里不存在，在临时变量里）索引 0 处的元素，默认索引-1\n5. `remove('123')`临时根据值删除元素，只删除顺序第一个，无法多个\n6. `sort()`永久性排序，参数reverse=True为倒序，默认reverse=False正序`car.sort(reverse=False)#方法`\n7. `sorted()`临时性排序`sorted(t)#函数`\n8. `reverse()`反转列表\n9. `len()`表长\n\n## 数字列表\n\n### range\n\n`range( 1 , 5 , 2 )`范围左闭右开 [ 1 , 5 ) 步长为 2（默认为1）\n\n### 简单统计\n\n```\nt=[1,2,3]\nprint(min(t))\n>1\nprint(max(t))\n>3\nprint(sum(t))\n>6\n```\n\n### 列表解析\n\n#### 过滤函数Filter函数\n\n```\n t=[1,2,3,4,5,6]\n filter(lambda x:x%2,t) \n >[1, 3, 5]\n print(filter(lambda x:x%2==1,t))\n >[1, 3, 5]\n```\n#### Lambda函数\n\n1. lambda允许用户快速定义单行函数，当然用户也可以按照典型的函数定义完成函数。\n\n2. lambda定义的是单行函数，如果需要复杂的函数，应该定义普通函数\n3. lambda参数列表可以包含多个参数，如lambda x,y:x+y\n4. lambda中的表达式不能含有命令，而且只限一条表达式\n\n```\nlst=['Welcome', 'to', 'Python']\nf=lambda x:x[-1]\ng=lambda x:len(x)\nprint(f(lst))\n>Python\nprint(g(lst)) \n>3\n```\n#### 序列映射函数Map函数\nMap主要用来对多个序列进行映射处理并返回一个处理后的对应序列。\n```\nm=[1,2,3,4,5,6]\nmap(lambda x:x**2,m)\n>[1, 4, 9, 16, 25, 36]\n```\n列表解析几种呈现\n```\n#找出1~9的三次方中的偶数项\n#方法1：列表解析+if判断\n\nt=[x**3 for x in range(1,10) if x%2==0]\nprint(t)\n>[8, 64, 216, 512]\n\n#方法2：列表解析+filter+lambda函数\n\nt=list(filter((lambda x:x%2==0),[x**3 for x in range(1,10)]))\nprint(t)  \n>[8, 64, 216, 512]\n\n#方法3：map+filter+lambda函数（列表解析类似于map函数，但列表解析比map函数运行要快一点，map函数对for循环要快2倍）\n\nt=list(filter(lambda x:x%2==0,map((lambda x:x**3),range(1,10))))\nprint(t)  \n>[8, 64, 216, 512]\n```\n### 切片\n\n[ m : n ]\n\n从索引m开始，到n-1结束（默认为表头：表尾）共 m-n 个元素\n\n#### 复制列表\n\n   [ : ]   #列表之间不能简单赋值，要用复制\n\n## 元组\n\n元组：()\n\n不能修改元组的元素，但可以给整个元组赋值(覆盖)\n\n# if语句\n\n## 检测多个条件\n\n- and\n\n- or\n\n- in #检查是否在其中\n\n- if-else\n```\n  if A:\n  else:\n```\n- if-elif-else\n```\n  if A:\n  elif B:\n  else:\n```\n\n# 字典\n\n字典：{  }         一系列的键值对\n\n1. 添加键值对\n```\nt={}\nt['new']=1\nprint(t)\n>{'new': 1}\n```\n\n2. `del t['new']`删除键值对\n\n3. `.items()`所有键值对\n\n4. `.keys()`所以键\n\n5. `.values()`所有值\n\n# 输入\npython2\n\n- raw_input()\n\npython3\n\n- input()\n\n"},{"title":"环境搭建","url":"/2019/07/03/ctf_day1/","content":"\n# RE：从零开始的github+hexo博客搭建\n\n## 安装[**node.js**](https://nodejs.org/en/)\n\nNodejs标准的web开发框架Express，可以帮助我们迅速建立web站点，而且学习曲线更低。非常适合小型网站，个性化网站\n\n1. [打开链接](https://nodejs.org/en)\n2. ![1562120225824](https://raw.githubusercontent.com/BeyoungBoSs/images/master/img/1562120225824.png)\n3. 左边绿色按钮为下载通用版，右边是最新版\n\n\n\n## 安装[**git**](https://git-scm.com/)\n是一个开源的分布式版本控制系统，用以有效、高速的处理从很小到非常大的项目版本管理 \n\n1. [打开链接](https://git-scm.com/)\n2. ![1562120405797](https://raw.githubusercontent.com/BeyoungBoSs/images/master/img/1562120405797.png)\n\n​       点击Downloads\n\n3. ![1562120555460](https://github.com/BeyoungBoSs/images/raw/master/img/1562120555460.png)\n\n​        选择系统类型\n\n4. （我以Windows 64位为例）\n\n![1562120668580](https://github.com/BeyoungBoSs/images/raw/master/img/1562120668580.png)\n\n下载安装包\n\n5. 安装过程除了选择安装路径，其他一直next就可以了\n\n## 配置环境变量\n\n1. 找到node安装路径![1562120964962](https://github.com/BeyoungBoSs/images/raw/master/img/1562120964962.png)\n2. 忘记了的话可以使用搜索![1562121087745](https://github.com/BeyoungBoSs/images/raw/master/img/1562121087745.png)\n3. [打开环境变量](https://jingyan.baidu.com/article/a17d5285c9b0c48099c8f26a.html)\n\n在path中![1562121342785](https://github.com/BeyoungBoSs/images/raw/master/img/1562121342785.png)\n\n添加你的安装路径\n\n4. 验证一下配置是否成功\n\ncmd中输入node后再输入var n=10测试下\n\n![1562121557375](https://github.com/BeyoungBoSs/images/raw/master/img/1562121557375.png)\n\n\n\n## 安装hexo\n\n\n\n1. 进入NodeJS的安装目录 \n2. 在空白处右键，因为安装了git的原因，会有\n\n![1562129164440](https://github.com/BeyoungBoSs/images/raw/master/img/1562129164440.png)\n\n3. 点击后进入\n\n![1562129335229](https://github.com/BeyoungBoSs/images/raw/master/img/1562129335229.png)\n\n输入：\n\n`npm install -g hexo`\n\n此处安装很玄学，有可能报错，有可能半天无反应\n\n常见错误即解决：1.权限不够：换成`sudo npm install -g hexo`\n\n​                               2.下载地址问题：[npm install 无响应解决方案,从此不用在等了](https://blog.csdn.net/fanhu6816/article/details/53812724)\n\n​                               3.[其他](http://www.baidu.com/)请自行\n\n4. 等待片刻\n5. 为你的博客创建一个本地文件夹\n\n```\nmkdir blog && cd D:blog\n```\n\n此处D:blog便是你的博客目录，自定义路径，最好将此目录备份，以防文件夹丢失后博客就没有了 \n\n6. 依次执行\n\n```\n hexo init\n npm install\n```\n7. 可以看本地效果并确定你是否完成了\n\n```\nhexo g\nhexo s\n```\n访问访问 http://localhost:4000 即可看到本地博客\n\n## 注册github\n\n1. 访问[https://github.com](https://github.com/) \n\n创建一个账号，完成后点击写着“sign up for GitHub”的绿色按钮 ，github会发邮件让你通过邮箱验证\n\n2. 新建仓库\n\n![1562130727170](https://github.com/BeyoungBoSs/images/raw/master/img/1562130727170.png)\n\n3. **很重要**    Github Pages的Repository名字是特定的，比如我Github账号是BeyoungBoSs，那么我Github Pages Repository名字就是BeyoungBoSs.github.io （按格式填入）\n\n   ![1562130796675](https://github.com/BeyoungBoSs/images/raw/master/img/1562130796675.png)\n   \n   \n\n4. 点击![1562130908530](https://github.com/BeyoungBoSs/images/raw/master/img/1562130908530.png)\n\n进入你刚建的仓库\n\n![1562130967603](https://github.com/BeyoungBoSs/images/raw/master/img/1562130967603.png)\n\n5. 进入设置\n\n![1562131027099](https://github.com/BeyoungBoSs/images/raw/master/img/1562131027099.png)\n\n6. 选择主题\n\n![1562131106386](https://github.com/BeyoungBoSs/images/raw/master/img/1562131106386.png)\n\n7. 完成了\n浏览器地址栏输入”你github的用户名.github.io”就可以看到初始的界面\n\n## 上传本地的仓库\n1. 打开刚刚新建的blog文件夹（我的是'D:\\blog'）\n\n2. 打开\n\n   ![1562131487342](https://github.com/BeyoungBoSs/images/raw/master/img/1562131487342.png)\n\n[最好不用记事本打开，记事本打开记得另存为utf-8格式](https://www.jianshu.com/p/b26b9b520c71)\n3. ![1562131447258](https://github.com/BeyoungBoSs/images/raw/master/img/1562131447258.png)\n\n要和图片中一模一样，其中’BeyoungBoSs‘改为你的github名字，**注意：每个‘：’后都有一个空格**\n4. 右键打开git bash\n    输入\n\n  ```\n  npm install hexo-deployer-git --save （这命令是为了解决hexo新版本的部署问题）  \n  hexo g 回车 （这是重新生成blog） \n  hexo d 回车 （这是将本地blog部署到github的仓库）```\n  ```\n可能会出各种问题，需要积极百度\n\n至此教程完成\n\n还有更换主题，和博文的[markdown语法](https://blog.csdn.net/csdnzcj/article/details/60876438)"},{"title":"BETA2","url":"/2019/07/02/beat2/","content":"## BETA 第二阶段：进行了优化，丰富了界面\n\n\n\n\n"},{"title":"BETA1","url":"/2019/06/25/beta1/","content":"# 点击 [BeyoungBoSs](http://www.so.com/link?m=aYglVvHdUg8K8kDlNIWngzoApM8JhkrCv6l8NlDg3d%2FjI7WdrAmcMHkPOpUICQ5bQ5t1h1RClptE%3D)! 每天欢乐一下\n\n## 现在还是**BETA**阶段\n\n\n\n\n"}]